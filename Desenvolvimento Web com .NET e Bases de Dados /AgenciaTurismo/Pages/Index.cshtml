@page
@model IndexModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center container mx-auto p-4 max-w-2xl bg-white rounded-lg shadow-md">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">Bem-vindo à Agência de Turismo!</h1>
    <p class="text-lg text-gray-600 mb-8">
        Aqui demonstramos conceitos de Delegates, Razor Pages e Entity Framework Core.
    </p>

    <!-- Nova Seção de Navegação para CRUDs e Notas -->
    <div class="mt-8 p-6 bg-indigo-50 rounded-lg border border-indigo-200">
        <h2 class="text-2xl font-semibold text-indigo-700 mb-4">Gerenciamento do Sistema</h2>
        <div class="flex flex-wrap justify-center gap-4">
            <a asp-page="/Clientes/Create" class="inline-block bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 ease-in-out">
                Cadastrar Cliente
            </a>
            <a asp-page="/Pacotes/Create" class="inline-block bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 ease-in-out">
                Cadastrar Pacote
            </a>
            <a asp-page="/Pacotes/Index" class="inline-block bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 ease-in-out">
                Listar Pacotes
            </a>
            <a asp-page="/ViewNotes" class="inline-block bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 ease-in-out">
                Sistema de Notas
            </a>
        </div>
    </div>

    <!-- Seção de Demonstração de Multicast Delegate -->
    <div class="mt-8 p-6 bg-gray-50 rounded-lg border border-gray-200">
        <h2 class="text-2xl font-semibold text-gray-700 mb-4">Demonstração de Logs (Multicast Delegate)</h2>
        <p class="text-gray-600 mb-4">
            Clique no botão abaixo para simular a criação de uma reserva e ver como o sistema registra logs em múltiplos destinos: console, arquivo e memória.
        </p>
        <form method="post" asp-page-handler="SimulateReservationCreation">
            <button type="submit" class="bg-green-600 text-white py-2 px-6 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition duration-200 ease-in-out">
                Simular Criação de Reserva
            </button>
        </form>

        <div class="mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200 text-left">
            <h3 class="text-xl font-semibold text-blue-800 mb-2">Logs Recentes:</h3>
            <p class="text-lg text-blue-700">@Model.LatestLogMessage</p>
            <h3 class="text-xl font-semibold text-blue-800 mt-4 mb-2">Logs em Memória:</h3>
            @if (Model.AllMemoryLogs != null && Model.AllMemoryLogs.Any())
            {
                <ul class="list-disc list-inside text-blue-700">
                    @foreach (var log in Model.AllMemoryLogs)
                    {
                        <li>@log</li>
                    }
                </ul>
            }
            else
            {
                <p class="text-blue-700">Nenhum log em memória ainda.</p>
            }
        </div>
    </div>

    <!-- Seção de Demonstração de Func com Expressão Lambda -->
    <div class="mt-8 p-6 bg-purple-50 rounded-lg border border-purple-200">
        <h2 class="text-2xl font-semibold text-purple-700 mb-4">Cálculo de Reserva (Func com Lambda)</h2>
        <p class="text-gray-600 mb-4">
            Utilize a função `Func` para calcular o valor total de uma reserva.
        </p>
        <form method="post" asp-page-handler="CalculateReservationTotal" class="space-y-4">
            <div class="flex flex-col">
                <label for="NumeroDiarias" class="text-gray-700 font-medium mb-1">Número de Diárias:</label>
                <input type="number" asp-for="NumeroDiarias" class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500" />
                <span asp-validation-for="NumeroDiarias" class="text-red-600 text-sm mt-1"></span>
            </div>
            <div class="flex flex-col">
                <label for="ValorDiaria" class="text-gray-700 font-medium mb-1">Valor da Diária:</label>
                <input type="number" step="0.01" asp-for="ValorDiaria" class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500" />
                <span asp-validation-for="ValorDiaria" class="text-red-600 text-sm mt-1"></span>
            </div>
            <button type="submit" class="w-full bg-purple-600 text-white py-2 px-6 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition duration-200 ease-in-out">
                Calcular Valor Total da Reserva
            </button>
        </form>

        @if (Model.ValorTotalReserva > 0)
        {
            <div class="mt-6 p-4 bg-purple-100 rounded-lg border border-purple-300 text-center">
                <h3 class="text-xl font-semibold text-purple-800">Valor Total da Reserva:</h3>
                <p class="text-lg text-purple-700 mt-2">
                    <span class="font-bold">@Model.ValorTotalReserva.ToString("C")</span>
                </p>
            </div>
        }
    </div>

    <!-- Seção de Demonstração de Evento de Alerta para Limite de Capacidade -->
    <div class="mt-8 p-6 bg-red-50 rounded-lg border border-red-200">
        <h2 class="text-2xl font-semibold text-red-700 mb-4">Alerta de Limite de Capacidade (Evento)</h2>
        <p class="text-gray-600 mb-4">
            Este exemplo simula a adição de reservas a um pacote turístico com capacidade máxima limitada.
            O evento `CapacityReached` será disparado quando o número de reservas atingir ou exceder o limite.
        </p>
        <div class="flex flex-col space-y-4">
            <div class="text-gray-700">
                <strong>Pacote Simulado:</strong> "@IndexModel._simulatedPackage.Titulo"
                (Capacidade: @IndexModel._simulatedPackage.ParticipantesAtuais / @IndexModel._simulatedPackage.CapacidadeMaxima)
            </div>
            <form method="post" asp-page-handler="SimulateCapacityCheck" class="space-y-4">
                <div class="flex flex-col">
                    <label for="NumeroReservasSimuladas" class="text-gray-700 font-medium mb-1">Adicionar Reservas (simulado):</label>
                    <input type="number" asp-for="NumeroReservasSimuladas" min="1" value="1" class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500" />
                </div>
                <button type="submit" class="w-full bg-red-600 text-white py-2 px-6 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition duration-200 ease-in-out">
                    Simular Adição de Reserva
                </button>
            </form>
            @if (!string.IsNullOrEmpty(Model.CapacidadeStatusMessage))
            {
                <div class="mt-4 p-3 bg-red-100 rounded-lg border border-red-300 text-center text-red-800 font-semibold">
                    @Model.CapacidadeStatusMessage
                </div>
            }
        </div>
    </div>

    <!-- Link para a página de Desconto (já existente) -->
    <div class="mt-8 p-4 bg-yellow-50 rounded-lg border border-yellow-200">
        <p class="text-gray-700">
            A página de
            <a asp-page="/Desconto" class="text-blue-600 hover:underline">Cálculo de Desconto</a>
            já está funcionando!
        </p>
    </div>
</div>
